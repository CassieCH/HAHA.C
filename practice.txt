#define _CRT_SECURE_NO_WARNINGS 5
#include<stdio.h>
#include<stdlib.h>
//1.调整数组使奇数全部都位于偶数前面。
//
//题目：
//
//输入一个整数数组，实现一个函数，
//来调整该数组中数字的顺序使得数组中所有的奇数位于数组的前半部分，
//所有偶数位于数组的后半部分。

//void sort1(int arr[], int sz)
//{
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < sz - 1; i++)//所需要移动的次数
//	{
//		for (j = 0; j <sz-1-i; j++)
//		{
//
//
//			if (arr[j] % 2 == 0 && arr[j + 1] % 2 != 0)
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//			}
//
//		}
//
//
//	}
//}
void sort2(int arr[], int sz)
{
	int left = 0;
	int right = sz - 1;
	while (left < right)
	{
		if (arr[left] % 2 == 1)
		{
			left++;
		}

		else if (arr[right] % 2 == 0)
		{
			right--;
		}

				else if ((arr[left] % 2 == 0) && (arr[right] % 2 == 1))
				{

					int tmp = arr[left];
					arr[left] = arr[right];
					arr[right] = tmp;
					left++;
					right--;
				}
			}
		}

	




int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");

	sort2(arr, sz);
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}

	system("pause");
	return 0;
}
//2//杨氏矩阵 
//有一个二维数组.
//数组的每行从左到右是递增的，每列从上到下是递增的.
//在这样的数组中查找一个数字是否存在。
//时间复杂度小于O(N);
//
//数组：
//1 2 3
//2 3 4
//3 4 5
//
//
//1 3 4
//2 4 5
//4 5 6
//
//1 2 3
//4 5 6
//7 8 9
//#define row 3
//#define col 3
//void  search(int (*arr)[col], int m)
//{
//	int i;
//	int j;
//	
//	for (i = 0; i < row; i++)
//	{
//      for (j = 0; j < col; j++)
//		{
//		  if (m == arr[i][j])
//		  {
//			  printf("找到了：%d=arr[%d][%d]\n", m, i+1, j+1);
//		  }
//
//		}
//	}
//}
////void search(int(*arr)[])
//
//int main()
//{   
//	int m = 3;
//	int arr[row][col] = { { 1, 2, 3 }, { 2, 3, 4 }, { 3, 4, 5 } };
//	search(arr, m);
//	system("pause");
//	return 0;
//
//
//}